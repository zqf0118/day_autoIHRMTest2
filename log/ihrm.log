2019-11-19 15:54:45,360 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:47:41,985 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:47:42,225 INFO [root] [TestLogin.py(test01_login_success:21)] - 测试登陆成功接口返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 16:48:06,303 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:48:06,555 INFO [root] [TestLogin.py(test01_login_success:21)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '0d5fbc7a-a240-4ed1-b22d-4c19c22f1631'}
2019-11-19 16:51:16,682 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:51:16,928 INFO [root] [TestLogin.py(test01_login_success:22)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '0de5f3f1-b006-4433-b371-9236e60ab029'}
2019-11-19 17:14:54,243 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:14:54,494 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'bc38412e-63cc-42d4-8905-c05776442750'}
2019-11-19 17:14:54,590 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:15:14,371 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:15:14,742 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '4f537647-d350-47e4-b4d1-2bfc0e23b54d'}
2019-11-19 17:15:18,642 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:15:19,120 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '5a5b98bb-9657-4c7a-97c8-08902a86c0e4'}
2019-11-19 17:15:19,210 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:23:53,145 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:43:31,545 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:43:31,792 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:44:28,050 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:44:28,441 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:48:34,014 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:48:34,244 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:27,554 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:52:27,810 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '062f5728-bc20-4879-ace2-59a9460d3844'}
2019-11-19 17:52:27,903 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:27,994 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:28,085 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:28,175 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:55:39,235 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:55:39,483 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:02:49,345 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:02:49,606 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '79c43339-7a3d-4aea-89c9-847a35d84447'}
2019-11-19 18:02:49,699 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,791 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,879 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,975 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:50,065 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:03:06,854 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:03:07,089 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '80c41ebb-9f39-4b08-9684-dcf27f40792d'}
2019-11-19 18:03:07,181 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,274 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,365 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,455 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,547 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:13:52,222 INFO [root] [utils.py(read_login_data:25)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:16:40,040 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:16:40,040 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,244 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,513 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '145f5e0f-113d-4283-8b75-4dda32a71da3'}
2019-11-19 18:20:14,513 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '145f5e0f-113d-4283-8b75-4dda32a71da3'}
2019-11-19 18:20:14,607 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,607 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,699 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,699 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,791 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,791 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,883 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,883 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-20 16:55:15,699 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-20 16:55:16,057 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '75d29772-68ac-4108-9b4b-031d8a3f4496'}
2019-11-20 16:55:16,057 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '75d29772-68ac-4108-9b4b-031d8a3f4496'}
2019-11-20 17:05:43,991 INFO [root] [app.py(init_login_status:44)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 1a970aca-a92f-475a-abfd-fcc169c61b73'}
2019-11-20 17:19:07,709 INFO [root] [app.py(init_login_status:47)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer dba3389b-c632-471c-b77a-a1ce04305485'}
2019-11-20 17:19:07,715 INFO [root] [TestEmp.py(test01:27)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{}
2019-11-20 17:24:05,685 INFO [root] [app.py(init_login_status:42)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:24:05,685 INFO [root] [app.py(init_login_status:48)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:24:05,690 INFO [root] [TestEmp.py(test01:26)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{'Content-Type': 'application/json', 'Authorization': 'Bearer 220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:25:21,852 INFO [root] [app.py(init_login_status:41)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '1de3c76f-e17b-4018-bbc7-348bdb526d1c'}
2019-11-20 17:25:21,852 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 1de3c76f-e17b-4018-bbc7-348bdb526d1c'}
2019-11-20 17:25:44,159 INFO [root] [app.py(init_login_status:41)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'ac9815c0-7e03-4551-8080-62f085a27acf'}
2019-11-20 17:25:44,159 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer ac9815c0-7e03-4551-8080-62f085a27acf'}
2019-11-20 17:27:11,566 INFO [root] [app.py(init_login_status:40)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-20 17:27:11,567 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-20 17:27:11,574 INFO [root] [TestEmp.py(test01:26)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{'Content-Type': 'application/json', 'Authorization': 'Bearer 637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-21 09:34:25,936 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,183 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:43)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,183 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:43)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,268 INFO [root] [TestLogin.py(test03_password_is_error:54)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,268 INFO [root] [TestLogin.py(test03_password_is_error:54)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,368 INFO [root] [TestLogin.py(test04_mobile_is_empty:65)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,368 INFO [root] [TestLogin.py(test04_mobile_is_empty:65)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,453 INFO [root] [TestLogin.py(test05_password_is_empty:76)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,453 INFO [root] [TestLogin.py(test05_password_is_empty:76)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,553 INFO [root] [TestLogin.py(test06_requests_params_is_empty:87)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 09:34:26,553 INFO [root] [TestLogin.py(test06_requests_params_is_empty:87)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 09:34:34,265 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:49:27,157 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:50:08,394 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:50:22,874 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:51:13,753 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:52:11,767 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:54:46,144 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:55:07,246 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:55:58,989 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:56:32,260 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:56:45,006 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:56:45,222 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 09:58:01,178 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:58:22,574 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:58:22,775 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 09:59:23,659 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:59:23,859 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:01:37,435 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:01:37,566 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'eecba403-08ae-45f4-b09e-a47bd9669ebc'}
2019-11-21 10:01:37,566 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'eecba403-08ae-45f4-b09e-a47bd9669ebc'}
2019-11-21 10:01:37,652 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:42)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,652 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:42)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,752 INFO [root] [TestLogin.py(test03_password_is_error:53)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,752 INFO [root] [TestLogin.py(test03_password_is_error:53)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,838 INFO [root] [TestLogin.py(test04_mobile_is_empty:64)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,838 INFO [root] [TestLogin.py(test04_mobile_is_empty:64)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,936 INFO [root] [TestLogin.py(test05_password_is_empty:75)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:37,936 INFO [root] [TestLogin.py(test05_password_is_empty:75)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:01:38,024 INFO [root] [TestLogin.py(test06_requests_params_is_empty:86)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:01:38,024 INFO [root] [TestLogin.py(test06_requests_params_is_empty:86)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:02:04,102 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:02:04,215 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '8af7d4d8-6dc4-42b1-bd12-1cfc8d473268'}
2019-11-21 10:02:04,215 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '8af7d4d8-6dc4-42b1-bd12-1cfc8d473268'}
2019-11-21 10:02:04,315 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:41)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,315 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:41)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,401 INFO [root] [TestLogin.py(test03_password_is_error:52)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,401 INFO [root] [TestLogin.py(test03_password_is_error:52)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,500 INFO [root] [TestLogin.py(test04_mobile_is_empty:63)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,500 INFO [root] [TestLogin.py(test04_mobile_is_empty:63)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,585 INFO [root] [TestLogin.py(test05_password_is_empty:74)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,585 INFO [root] [TestLogin.py(test05_password_is_empty:74)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:02:04,678 INFO [root] [TestLogin.py(test06_requests_params_is_empty:85)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:02:04,678 INFO [root] [TestLogin.py(test06_requests_params_is_empty:85)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:03:18,482 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:03:18,684 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:03:24,444 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:03:24,560 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '5e396c7a-702f-4225-9c9a-ab8655f24fc8'}
2019-11-21 10:03:24,661 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:41)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:03:24,761 INFO [root] [TestLogin.py(test03_password_is_error:52)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:03:24,846 INFO [root] [TestLogin.py(test04_mobile_is_empty:63)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:03:24,949 INFO [root] [TestLogin.py(test05_password_is_empty:74)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 10:03:25,031 INFO [root] [TestLogin.py(test06_requests_params_is_empty:85)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:12:45,570 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:12:45,772 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:15:22,036 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:15:22,237 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:15:40,018 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:15:40,218 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:17:43,631 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:17:43,816 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197338273617629184'}}
2019-11-21 10:19:09,901 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:19:10,119 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 10:20:09,618 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:20:09,835 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197338886023761920'}}
2019-11-21 10:43:52,613 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:43:52,849 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197344854543519744'}}
2019-11-21 11:07:07,113 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:07:07,334 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197350703433338880'}}
2019-11-21 11:08:16,150 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:08:16,375 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197350993024864256'}}
2019-11-21 11:08:16,564 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:09:41,667 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:09:41,895 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197351351725936640'}}
2019-11-21 11:09:42,078 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:10:46,900 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:10:47,113 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197351625270054912'}}
2019-11-21 11:10:47,302 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197351625270054912'}}
2019-11-21 11:13:34,777 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:13:35,023 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:14:03,742 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:14:03,981 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197352450981711872'}}
2019-11-21 11:14:04,160 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197352450981711872'}}
2019-11-21 11:16:39,970 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:16:40,114 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'dc691344-49a4-422a-a483-e1fa5c02ead7'}
2019-11-21 11:16:40,200 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:41)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:16:40,300 INFO [root] [TestLogin.py(test03_password_is_error:52)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:16:40,395 INFO [root] [TestLogin.py(test04_mobile_is_empty:63)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:16:40,486 INFO [root] [TestLogin.py(test05_password_is_empty:74)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:16:40,577 INFO [root] [TestLogin.py(test06_requests_params_is_empty:85)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:16:40,754 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197353108568887296'}}
2019-11-21 11:16:40,944 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197353108568887296'}}
2019-11-21 11:17:38,356 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:17:38,484 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '6f28536d-508e-4f87-8c59-7a98ac7f7419'}
2019-11-21 11:17:39,879 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:41)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:17:39,958 INFO [root] [TestLogin.py(test03_password_is_error:52)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:17:40,062 INFO [root] [TestLogin.py(test04_mobile_is_empty:63)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:17:40,156 INFO [root] [TestLogin.py(test05_password_is_empty:74)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 11:17:40,247 INFO [root] [TestLogin.py(test06_requests_params_is_empty:85)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:17:40,433 INFO [root] [TestEmp.py(test02_add_emp:37)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197353358868172800'}}
2019-11-21 11:17:40,617 INFO [root] [TestEmp.py(test04_update_emp:64)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197353358868172800'}}
2019-11-21 11:45:13,241 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:45:13,465 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360292149153792'}}
2019-11-21 11:45:13,651 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360292149153792'}}
2019-11-21 11:46:33,399 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:46:33,618 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360628326813696'}}
2019-11-21 11:46:33,806 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360628326813696'}}
2019-11-21 11:47:05,103 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:47:05,330 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360761340776448'}}
2019-11-21 11:47:05,518 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360761340776448'}}
2019-11-21 11:47:05,742 INFO [root] [TestEmp.py(test04_update_emp:75)] - 从数据库查询出来的员工名称是：(('tom',),)
2019-11-21 11:47:58,890 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:47:59,111 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360986918834176'}}
2019-11-21 11:47:59,301 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197360986918834176'}}
2019-11-21 11:47:59,522 INFO [root] [TestEmp.py(test04_update_emp:75)] - 从数据库查询出来的员工名称是：tom
2019-11-21 11:48:25,433 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:48:25,665 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197361098290188288'}}
2019-11-21 11:48:25,862 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197361098290188288'}}
2019-11-21 11:48:26,083 INFO [root] [TestEmp.py(test04_update_emp:75)] - 从数据库查询出来的员工名称是：tom
2019-11-21 11:48:46,146 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:48:46,368 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197361185124864000'}}
2019-11-21 11:48:46,563 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197361185124864000'}}
2019-11-21 11:48:46,787 INFO [root] [TestEmp.py(test04_update_emp:75)] - 从数据库查询出来的员工名称是：tom
2019-11-21 11:52:41,399 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:52:41,618 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197362171839074304'}}
2019-11-21 11:52:41,809 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197362171839074304'}}
2019-11-21 11:53:53,419 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:53:53,640 INFO [root] [TestEmp.py(test02_add_emp:39)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197362473921236992'}}
2019-11-21 11:53:53,825 INFO [root] [TestEmp.py(test04_update_emp:66)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197362473921236992'}}
2019-11-21 11:53:54,045 INFO [root] [TestEmp.py(test04_update_emp:75)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:08:08,438 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:12:22,550 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:12:22,550 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:15:12,576 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 12:15:12,637 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:15:12,637 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:15:12,637 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:15:12,637 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:15:12,833 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197367839245553664'}}
2019-11-21 12:15:12,833 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197367839245553664'}}
2019-11-21 12:15:13,022 INFO [root] [TestEmpParams.py(test04_update_emp:68)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197367839245553664'}}
2019-11-21 12:15:13,022 INFO [root] [TestEmpParams.py(test04_update_emp:68)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197367839245553664'}}
2019-11-21 12:15:13,239 INFO [root] [TestEmpParams.py(test04_update_emp:77)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:15:13,239 INFO [root] [TestEmpParams.py(test04_update_emp:77)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:17:09,135 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:17:09,135 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:18:17,877 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 12:18:17,949 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:18:17,949 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:18:17,949 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:18:17,949 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:18:17,957 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:18:17,957 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:18:17,957 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:18:17,958 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:18:17,958 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:18:17,958 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:18:18,157 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,157 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,157 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,353 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,353 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,353 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197368616517193728'}}
2019-11-21 12:18:18,571 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:18:18,571 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:18:18,571 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:20:04,140 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:20:04,140 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[(None, 200, True, 10000, '操作成功')]
2019-11-21 12:20:41,513 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:20:41,513 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,285 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 12:22:02,353 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,353 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,353 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,353 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,365 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,365 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,365 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,366 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:22:02,366 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:22:02,366 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,377 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:22:02,577 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,577 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,577 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,577 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,767 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,767 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,767 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,767 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197369557828063232'}}
2019-11-21 12:22:02,988 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:22:02,988 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:22:02,988 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:22:02,988 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:23:38,222 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:23:38,222 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,668 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 12:24:37,727 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,727 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,727 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,727 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,735 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,735 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,735 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,736 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,736 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,736 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,744 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,753 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 12:24:37,950 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:37,950 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:37,950 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:37,950 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:37,950 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,140 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,140 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,140 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,140 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,140 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197370209501270016'}}
2019-11-21 12:24:38,359 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:24:38,359 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:24:38,359 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:24:38,359 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 12:24:38,359 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:50:30,539 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 14:50:30,602 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,602 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,602 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,602 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,619 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,619 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,619 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,620 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,620 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,620 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,632 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,632 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,632 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,632 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,633 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,633 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,633 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,633 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:50:30,641 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,641 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,641 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,641 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,641 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:50:30,642 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,642 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,642 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,642 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:30,642 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:50:31,095 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,095 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,095 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,095 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,095 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,477 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,477 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,477 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,477 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,477 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197406923590553600'}}
2019-11-21 14:50:31,930 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:50:31,930 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:50:31,930 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:50:31,930 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:50:31,930 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:02,108 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 14:56:02,168 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,168 INFO [root] [utils.py(read_add_emp:79)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,169 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,169 INFO [root] [utils.py(read_add_emp:88)] - 添加员工数据列表为：[('葫芦娃xxxx111', '13145201313', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:97)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,174 INFO [root] [utils.py(read_query_emp:104)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,180 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,180 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,180 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,180 INFO [root] [utils.py(read_update_emp:114)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,181 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,181 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,181 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,181 INFO [root] [utils.py(read_update_emp:122)] - 添加员工数据列表为：[('tom', 200, True, 10000, '操作成功')]
2019-11-21 14:56:02,187 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,187 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,187 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,187 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,187 INFO [root] [utils.py(read_delete_emp:132)] - 读取的数据有：{'add_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功', 'username': '葫芦娃xxxx111', 'mobile': '13145201313'}, 'query_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'update_emp': {'update_username': 'tom', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, 'delete_emp': {'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}}
2019-11-21 14:56:02,188 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,188 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,188 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,188 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,188 INFO [root] [utils.py(read_delete_emp:139)] - 添加员工数据列表为：[(200, True, 10000, '操作成功')]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,195 INFO [root] [utils.py(read_login_data:59)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,200 INFO [root] [utils.py(read_login_data:69)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,376 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '06091319-fc1d-47d9-8310-b75b5cc7c2a4'}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,559 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,741 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:02,984 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,185 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:03,624 INFO [root] [TestEmpParams.py(test02_add_emp:41)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,019 INFO [root] [TestEmpParams.py(test04_update_emp:69)] - 修改员工接口返回值为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197408318255353856'}}
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
2019-11-21 14:56:04,587 INFO [root] [TestEmpParams.py(test04_update_emp:78)] - 从数据库查询出来的员工名称是：tom
